@page FreeRTOS aws_demos application

@verbatim
******************************************************************************
* @file    	readme.txt
* @revision	2.0
* @date		09/15/2021
* @author  	MCD Application Team
* @brief   	Instructions for STM32 AWS QuickConnect scripts
******************************************************************************
*
* Copyright (c) 2020 STMicroelectronics International N.V. All rights reserved.
*
* This software component is licensed by ST under Ultimate Liberty license
* SLA0044, the "License"; You may not use this file except in compliance with
* the License. You may obtain a copy of the License at:
*                             www.st.com/SLA0044
*
******************************************************************************
@endverbatim

Description:

STM32_AWS_QuickConnect.py:: This script will Create, Register, and Connect your STM32L4+ IoT Disco Board with AWS IoT. 

Dependencies::

    Python          -- https://www.python.org/ftp/python/3.9.5/python-3.9.5-amd64.exe 
        NOTE: When installing Python make sure to install pip by selecting pip under Optional Features
	NOTE: When installing Python make sure to select 'Add Python to the Path' during installation.

    pyserial        -- https://pypi.org/project/pyserial/
        NOTE: Open Command Prompt and enter the command 'pip install pyserial' to install the latest version of pyserial

    boto3           --
        NOTE: Open Command Prompt and enter the command 'pip install boto3' to install the latest version of boto3


How to use::
	1. Create an IAM use in AWS. Make note of the access key and secret key.
	
	2. Attach inline policy to IAM user using the JSON object. Give the policy an appropriate name.
	
	{
    	"Version": "2012-10-17",
    	"Statement": [
        	{
            	"Sid": "VisualEditor0",
        	    "Effect": "Allow",
	            "Action": [
                	"iot:DetachThingPrincipal",
                	"iot:CreateThing",
                	"iot:DeleteThing",
                	"iot:AttachThingPrincipal",
                	"iot:DetachPolicy",
                	"iot:DeleteCertificate",
                	"iot:AttachPolicy",
                	"iot:RegisterCertificateWithoutCA",
                	"iot:CreatePolicy",
                	"iot:ListAttachedPolicies",
                	"iot:DescribeEndpoint",
                	"iot:DeletePolicy",
                	"iot:ListThingPrincipals",
                	"iot:UpdateCertificate"
            	],
            	"Resource": "*",
            	"Condition": {
        	        "StringEquals": {
	                    "aws:RequestedRegion": "REGION_NAME"
                	}
        	    }
	        }
	    ]
	}
	
	Replace REGION_NAME with the desired region for the device.

        3. Open ..\STM32_AWS_QuickConnect\Scripts\Config.txt and update the fields with your information to match the form below:
        
            SSID: NetworkName
	    Password: NetworkPassword
	    Access_Key: AWSAccessKey
	    Secret_Key: AWSSecretKey
	    Region: RegionCode

        SSID - Enter the SSID for your 2.4G network
        Password - Enter the password to the 2.4G network
	Access_Key - The Access key from the the IAM user created above.
	Secret_Key - The Secret key from the the IAM user created above.
	Region - The desired region for the device (e.g. us-west-2). This must be the same as the region from step 2.

	4. Be sure the L4+ board is plugged into USB on this computer.
	
        5. Navigate to ..\STM32_AWS_QuickConnect\Scripts\ and double-click STM32_AWS_QuickConnect.py. Monitor script progress in the command prompt window. 

	Note: Flashing the Main application binary can take a few minutes. The on-board STLINK LED should be blinking Red and Green.

        6. Certificates will be collected in ..\STM32_AWS_QuickConnect\Scripts\Certs. 
        and Policies will be collected in ..\STM32_AWS_QuickConnect\Scripts\Policies. 

	Note: Each thing in AWS will have a unique 24-digit ID generated by the binary and used to register device and certificates. After successfully running the scripts, this unique ID can be found under 'ThingName' in the ..\STM32_AWS_QuickConnect\Scripts\Config.txt. Make note of the unique ID, so it can be used to later identify the board in the AWS IoT Core. 

	Note: The board is registered to the following topics:
		-dt/<id>/sensor-data
		-$aws/things/<id>/shadow/#
		-$aws/events/presence/connected/<id>
		-$aws/events/presence/disconnected/<id>
		-lw/<id>/will

If you want to turn the LED On on the board send the following message to this MQTT topic $aws/things/<id>/shadow/update


{
"state": {
"desired": {
"LED": 1
}
},
"clientToken": "027269"
}


Set the property "LED": to 0 if you want to turn it off


{
"state": {
"desired": {
"LED": 0
}
},
"clientToken": "027269"
}

******************************************************************************

    STM32_AWS_CleanupThing.py:: Removes thing created by STM32_AWS_QuickConnect.py and associated certificate and policy.
	
        1. Navigate to ..\STM32_AWS_QuickConnect\Scripts\ and double-click cleanupThing.py.
	
	Note: In order for the operation to complete successfully, the access key and secret key associated with the IAM user and the region associated with the thing need to be filled in on ..\STM32_AWS_QuickConnect\Scripts\Config.txt.

        2. When prompted, enter the unique 24-digit ID of the desired board.

	3. Monitor the command window to verify the process finishes.